@page "/registration"

@using Services
@using ViewModels

@inject AuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<div class="col-6">
    <EditForm EditContext="registrationContext" Model="@registrationModel" OnValidSubmit="async() => await HandleValidSubmit()">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="text-danger">@error</div>

        <div class="form-group">
            <label for="userName">UserName:</label>
            <InputText id="userName" class="form-control" @bind-Value="registrationModel.UserName" />
        </div>

        <div class="form-group">
            <label for="email">Email:</label>
            <InputText id="email" class="form-control" @bind-Value="registrationModel.Email" />
        </div>

        <div class="form-group">
            <label for="password">Password:</label>
            <InputText id="password" class="form-control" @bind-Value="registrationModel.Password" />
        </div>

        <div class="form-group">
            <label for="phoneNumber">PhoneNumber:</label>
            <InputText id="phoneNumber" class="form-control" @bind-Value="registrationModel.PhoneNumber" />
        </div>

        <button type="submit" class="btn btn-primary">Register</button>
    </EditForm>
</div>
<div class="col-6"></div>

@code  {
    private EditContext registrationContext;

    private RegistrationModel registrationModel = new RegistrationModel();

    private string error;

    protected override void OnInitialized()
    {
        registrationContext = new EditContext(registrationModel);
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            await AuthenticationService.RegisterUserAsync(registrationModel);

            NavigationManager.NavigateTo("login");
        } catch (Exception e)
        {
            error = e.Message;
        }
    }
}

